function solution(k, m, score) {
    let answer = 0;
    score.sort((a,b) => b - a);
    
    // 2. m개씩 그룹으로 나누기(slice)
    // i를 m씩 증가시키면서 그룹화
    for(let i = 0; i < score.length; i += m) {
        let box = score.slice(i, i + m);
        // 3-1. 그룹의 최소값 × m = 해당 상자의 가격
        // 상자에 m개가 다 찼을 때만 계산
        if(box.length === m) {
            answer += Math.min(...box) * m;
        }
    }
    
    return answer;
}

// [요구사항]
// 사과는 1점부터 k점까지 점수로 분류됨 (k점이 최상품)
// 한 상자에 m개의 사과를 담아야 함
// 상자의 가격 = (상자 안 최저 점수 사과의 점수) × (상자에 담긴 사과 개수 m)
// 사과는 상자 단위로만 판매 가능하고 남는 사과는 버림
// => 최대 이익 리턴하려면 높은 점수 기준으로 정렬하고 낮은 점수는 버리는 게 좋음

// [풀이]
// 1. score를 내림차순 정렬
// 2. m개씩 그룹으로 나누기(slice)
// 3. 각 그룹에서
// 3-1. 그룹의 최소값 × m = 해당 상자의 가격
// 3-2. 그룹의 크기가 m보다 작으면 버림
// 4. 모든 상자 가격의 합계 반환(이익이 발생하지 않는 경우에는 0을 return)